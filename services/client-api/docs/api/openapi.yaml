components:
  schemas:
    Blog:
      example:
        body: Test Body for Test Blog.
        comments:
        - sample comment 1
        - sample comment 2
        created_on: '2022-01-01'
        tags:
        - tag1
        - tag2
        title: Test Title
      properties:
        _id:
          title: ' Id'
          type: string
        body:
          title: Body
          type: string
        comments:
          items:
            $ref: '#/components/schemas/Comment'
          title: Comments
          type: array
        created_at:
          format: date-time
          title: Created At
          type: string
        tags:
          items:
            type: string
          title: Tags
          type: array
        title:
          title: Title
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
      - title
      - body
      - tags
      - created_at
      title: Blog
      type: object
    BlogCollection:
      example:
        summary: Test Body summary
        tags:
        - tag1
        - tag2
        title: Test Title
      properties:
        _id:
          title: ' Id'
          type: string
        body:
          title: Body
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        summary:
          title: Summary
          type: string
        tags:
          items:
            type: string
          title: Tags
          type: array
        title:
          title: Title
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
      - title
      - tags
      - body
      - created_at
      title: BlogCollection
      type: object
    Comment:
      example:
        body: Test Body for Test Blog.
        tags:
        - tag1
        - tag2
        title: Test Title
      properties:
        _id:
          title: ' Id'
          type: string
        body:
          title: Body
          type: string
        created_on:
          format: date-time
          title: Created On
          type: string
        display_name:
          title: Display Name
          type: string
        email:
          format: email
          title: Email
          type: string
      required:
      - email
      - display_name
      - body
      - created_on
      title: Comment
      type: object
    CommentPost:
      example:
        body: Test Comment for Test Blog.
        display_name: test-name
        email: abc@example.com
      properties:
        body:
          title: Body
          type: string
        display_name:
          title: Display Name
          type: string
        email:
          format: email
          title: Email
          type: string
      required:
      - email
      - display_name
      - body
      title: CommentPost
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /alive:
    get:
      operationId: alive_alive_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Alive
  /api/v1/blogs:
    get:
      operationId: get_blogs_api_v1_blogs_get
      parameters:
      - in: query
        name: tag
        required: false
        schema:
          default: ''
          title: Tag
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlogCollection'
                title: Response Get Blogs Api V1 Blogs Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Blogs
  /api/v1/blogs/{id}:
    get:
      operationId: get_single_blog_api_v1_blogs__id__get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Single Blog
  /api/v1/blogs/{id}/comment:
    post:
      operationId: add_comment_api_v1_blogs__id__comment_post
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPost'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Add Comment
